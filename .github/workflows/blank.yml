name: Create Release Tag

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  create-release-tag:
    # Only run if the PR was merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Extract version from PR title
      id: get_version
      run: |
        # Extract version from PR title using a regex pattern
        # Assumes PR title follows semantic versioning format like "release: v1.2.3"
        VERSION=$(echo "${{ github.event.pull_request.title }}" | grep -oP 'v\d+\.\d+\.\d+')
        
        if [ -z "$VERSION" ]; then
          echo "No version found in PR title. Skipping release tag creation."
          exit 1
        fi
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
    
    - name: Create Release Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create an annotated tag
        git config user.name github-actions
        git config user.email github-actions@github.com
        
        git tag -a ${{ steps.get_version.outputs.version }} \
          -m "Release ${{ steps.get_version.outputs.version }}"
        
        # Push the tag to the repository
        git push origin ${{ steps.get_version.outputs.version }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## Changes
          - Automated release created from merged PR
          
          ### Pull Request Details
          - Merged by: ${{ github.event.pull_request.user.login }}
          - Merged at: ${{ github.event.pull_request.merged_at }}
        draft: false
        prerelease: false
